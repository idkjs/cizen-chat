// Generated by BUCKLESCRIPT VERSION 4.0.6, PLEASE EDIT WITH CARE
'use strict';

var Phx = require("bucklescript-phx/src/phx.js");
var Phx_presence = require("bucklescript-phx/src/phx_presence.js");

console.log("hello cizen!");

function handleReiceive($$event, any) {
  switch ($$event) {
    case "error" : 
        console.log(/* tuple */[
              "handleReiceive:" + $$event,
              "Failed to join channel"
            ]);
        return /* () */0;
    case "ok" : 
        console.log(/* tuple */[
              "handleReiceive:" + $$event,
              "Joined"
            ]);
        return /* () */0;
    default:
      console.log(/* tuple */[
            "handleReiceive:" + $$event,
            any
          ]);
      return /* () */0;
  }
}

function handleEvent($$event, response) {
  console.log(/* tuple */[
        "handleEvent:" + $$event,
        response
      ]);
  return /* () */0;
}

function handleSyncState(response) {
  console.log(/* tuple */[
        "handleSyncState",
        response
      ]);
  Phx_presence.syncState(undefined, undefined, { }, response);
  return /* () */0;
}

function handleSyncDiff(diff) {
  console.log(/* tuple */[
        "handleSyncDiff:diff",
        diff
      ]);
  var presences = Phx_presence.syncDiff(undefined, undefined, { }, diff);
  console.log(/* tuple */[
        "handleSyncDiff:presences",
        presences
      ]);
  return /* () */0;
}

var eta = Phx.initSocket(undefined, "/socket");

var socket = Phx.putOnClose((function () {
        console.log("Socket closed");
        return /* () */0;
      }), Phx.connectSocket(undefined, eta));

var channel = (function (eta) {
      return Phx.initChannel("room:hello", undefined, eta);
    })(socket);

var eta$1 = Phx.putOnsyncDiff(handleSyncDiff, Phx.putOnSyncState(handleSyncState, Phx.putOn("from_server", (function (param) {
                return handleEvent("from:server", param);
              }), channel)));

Phx.putReceive("error", (function (param) {
        return handleReiceive("error", param);
      }), Phx.putReceive("ok", (function (param) {
            return handleReiceive("ok", param);
          }), Phx.joinChannel(undefined, eta$1)));

Phx.push("new:message", {
      body: "Hello, Elixir! This is a greeting from Reason!"
    }, undefined, channel);

exports.handleReiceive = handleReiceive;
exports.handleEvent = handleEvent;
exports.handleSyncState = handleSyncState;
exports.handleSyncDiff = handleSyncDiff;
/*  Not a pure module */
