// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var ReasonReact = require("reason-react/src/legacy/ReasonReact.bs.js");

var component = ReasonReact.reducerComponent("InPlaceEdit");

function make(name, text, handleChange, _children) {
  return {
          debugName: component.debugName,
          reactClassInternal: component.reactClassInternal,
          handedOffState: component.handedOffState,
          willReceiveProps: component.willReceiveProps,
          didMount: component.didMount,
          didUpdate: component.didUpdate,
          willUnmount: component.willUnmount,
          willUpdate: component.willUpdate,
          shouldUpdate: component.shouldUpdate,
          render: (function (self) {
              var match = self.state;
              var tmp;
              if (match) {
                var str = match[0].text;
                tmp = React.createElement("input", {
                      value: str,
                      onKeyDown: (function ($$event) {
                          if ($$event.keyCode === 13) {
                            $$event.preventDefault();
                            Curry._1(handleChange, str);
                            return Curry._1(self.send, /* Toggle */0);
                          }
                          
                        }),
                      onChange: (function ($$event) {
                          return Curry._1(self.send, /* Update */[$$event.target.value]);
                        })
                    });
              } else {
                tmp = React.createElement(React.Fragment, undefined, React.createElement("span", {
                          className: "c-iedit-" + (name + "-content")
                        }, text), React.createElement("span", {
                          className: "c-iedit-" + (name + "-action"),
                          onClick: (function (_event) {
                              return Curry._1(self.send, /* Toggle */0);
                            })
                        }, "Edit"));
              }
              return React.createElement("div", {
                          className: "c-iedit-" + name
                        }, tmp);
            }),
          initialState: (function (param) {
              return /* Fixed */0;
            }),
          retainedProps: component.retainedProps,
          reducer: (function (action, state) {
              if (action) {
                return /* Update */Block.__(0, [/* Editing */[{
                              text: action[0]
                            }]]);
              } else if (state) {
                return /* Update */Block.__(0, [/* Fixed */0]);
              } else {
                return /* Update */Block.__(0, [/* Editing */[{
                              text: text
                            }]]);
              }
            }),
          jsElementWrapped: component.jsElementWrapped
        };
}

exports.component = component;
exports.make = make;
/* component Not a pure module */
